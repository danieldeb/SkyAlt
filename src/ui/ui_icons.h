/*
 * Copyright (c) 2018 Milan Suk
 *
 * Use of this software is governed by the Business Source License included
 * in the LICENSE file and at www.mariadb.com/bsl11.
 *
 * Change Date: 2024-11-01
 *
 * On the date above, in accordance with the Business Source License, use
 * of this software will be governed by version 2 or later of the General
 * Public License.
 */

void UiIcons_convertZlib(UCHAR* buffer, UBIG bufferSize, const char* name)
{
	Image4 png;
	if (Image4_initBuffer(&png, buffer, bufferSize, ".png"))
	{
		Image1 img = Image4_convertToImage1(&png);

		UBIG plainN = Image1_num(&img);
		UBIG max_compressN = OsZlib_maxCompressSize(plainN);

		UCHAR* data = Os_malloc(max_compressN);
		BIG compressN = OsZlib_compress(img.data, data, plainN, max_compressN, OsZlib_BEST_COMPRESS);
		printf("const UCHAR %s[] = {\n", name);

		int line = 0;
		int i;
		for (i = 0; i < compressN; i++)
		{
			printf("%d", data[i]);
			if (i + 1 < compressN)
				printf(",");
			if (line++ == 20)
				printf("\n"), line = 0;
		}
		printf("\n};\n");

		printf("Image1 UiIcons_init_%s(void){\n\tImage1 self = Image1_initSize(Vec2i_init2(%d, %d));\n\tOsZlib_uncompress(%s, self.data, sizeof(%s), Image1_num(&self));\n\treturn self;\n}\n\n", name, img.size.x, img.size.y, name, name);

		Os_free(data, max_compressN);
		Image4_free(&png);
		Image1_free(&img);
	}
}

void UiIcons_convertZlib_header(const char* name)
{
	printf("Image1 UiIcons_init_%s(void);\n", name);
}

void UiIcons_convertFolder(const char* pathFolder)
{
	char** paths;
	BIG num_files = OsFileDir_getFileList(pathFolder, TRUE, FALSE, TRUE, &paths);

	int i;
	//functions(+body)
	for (i = 0; i < num_files; i++)
	{
		UBIG bufferSize;
		UCHAR* buffer = OsFile_initRead(paths[i], &bufferSize, 0);
		if (buffer)
		{
			char* folder;
			char* name;
			OsFile_getParts(paths[i], &folder, &name);
			UiIcons_convertZlib(buffer, bufferSize, name);

			Std_deleteCHAR(folder);
			Std_deleteCHAR(name);
			Os_free(buffer, bufferSize);
		}
	}

	//functions(only headers)
	for (i = 0; i < num_files; i++)
	{
		char* folder;
		char* name;
		OsFile_getParts(paths[i], &folder, &name);
		UiIcons_convertZlib_header(name);

		Std_deleteCHAR(folder);
		Std_deleteCHAR(name);

		Std_deleteCHAR(paths[i]);
	}

	Os_free(paths, num_files * sizeof(char*));
}

/**/  /**/  /**/  /**/  /**/  /**/  /**/  /**/  /**/  /**/  /**/  /**/  /**/

const UCHAR column_link[] = {
120,156,197,146,63,110,194,48,24,197,157,13,104,24,1,175,201,70,65,34,167,
168,224,0,173,232,25,200,14,18,247,168,132,248,115,134,112,143,108,164,24,9,
49,181,98,37,19,149,58,228,213,113,156,196,106,62,101,229,77,150,223,243,231,
159,159,204,216,163,196,103,228,118,107,121,250,189,238,92,198,5,168,64,47,68,
170,248,77,64,240,138,59,243,4,46,227,246,112,47,35,148,141,4,81,71,46,
172,15,224,149,64,18,72,70,106,37,3,177,67,6,244,88,43,192,154,192,243,
146,60,48,192,23,125,129,14,216,184,147,227,61,125,197,24,145,73,174,206,248,
169,149,49,240,51,230,230,195,178,161,62,215,12,114,74,216,44,253,81,82,214,
161,24,116,15,90,157,168,192,202,25,116,15,74,173,16,159,57,86,193,224,151,
254,18,231,110,89,141,98,224,134,205,142,120,97,102,119,255,245,131,39,86,23,
184,162,207,234,2,91,4,86,93,192,141,177,178,42,61,24,154,2,155,52,160,
122,240,43,182,28,11,4,207,246,228,34,123,32,109,241,126,83,223,50,236,18,
120,170,49,103,243,125,63,44,26,212,243,178,198,30,164,63,15,201,175,117
};
Image1 UiIcons_init_column_link(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_link, self.data, sizeof(column_link), Image1_num(&self));
	return self;
}

const UCHAR map[] = {
120,156,205,210,63,75,66,81,24,6,240,231,146,255,192,36,7,135,164,41,196,
134,220,10,250,2,133,180,149,66,100,105,17,41,22,8,65,67,171,68,68,91,
131,67,107,65,212,7,8,193,136,90,138,130,232,134,20,9,166,81,67,110,10,
134,136,65,129,62,121,181,235,189,198,181,49,122,135,115,222,231,252,184,135,11,
231,5,254,186,12,75,98,177,120,19,214,119,224,190,36,27,117,107,111,63,55,
47,167,30,163,253,48,221,51,51,105,179,121,158,152,52,168,212,177,253,38,125,
180,134,85,166,173,210,129,53,195,21,25,5,119,188,202,106,130,220,117,65,228,
4,4,223,180,0,15,175,101,79,147,165,152,19,100,189,47,211,130,89,210,135,
30,150,100,39,35,150,198,86,95,10,236,133,159,156,129,157,121,197,149,237,132,
161,230,253,97,30,107,121,128,162,208,248,39,145,126,45,55,229,232,149,130,151,
175,70,45,71,136,89,29,160,203,50,8,77,215,191,72,18,228,179,94,219,49,
199,130,205,86,96,0,30,109,199,25,15,14,121,10,115,174,131,187,62,107,181,
143,65,68,217,193,177,69,110,2,149,142,110,76,61,24,85,241,167,47,98,120,
8,191,120,101,160,253,186,102,103,137,144,27,142,70,188,248,142,42,119,198,74,
210,124,212,206,23,186,91,49,173,120,162,62,31,71,163,35,59,69,178,188,215,
140,113,183,160,56,243,235,189,82,215,53,182,255,78,37,202,126,55,223,122,43,
88,195,151,87,83,234,209,4,198,5,252,219,250,2,165,163,230,185
};
Image1 UiIcons_init_map(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(map, self.data, sizeof(map), Image1_num(&self));
	return self;
}

const UCHAR calendar[] = {
120,156,99,96,24,36,224,255,127,236,108,8,31,27,32,69,30,211,124,124,246,
97,186,135,114,251,73,241,47,217,242,114,187,63,239,146,195,35,191,27,232,172,
157,120,228,127,254,87,250,255,19,175,253,242,255,63,227,147,87,187,255,127,41,
30,121,243,87,255,143,243,227,145,255,140,8,55,172,242,255,9,200,51,96,23,
163,92,158,178,248,31,196,0,0,20,229,231,246
};
Image1 UiIcons_init_calendar(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(calendar, self.data, sizeof(calendar), Image1_num(&self));
	return self;
}

const UCHAR column_url[] = {
120,156,99,96,24,52,64,170,124,203,227,111,223,30,109,41,145,194,38,43,183,
244,207,127,40,248,51,95,14,67,58,244,227,255,159,255,254,95,82,82,186,244,
255,223,207,255,31,67,209,164,115,255,253,95,151,242,255,163,12,3,131,236,167,
255,41,235,254,255,203,70,213,253,239,95,1,195,238,255,117,32,118,227,255,29,
12,5,255,254,5,35,219,253,225,127,33,131,208,223,191,226,32,142,196,223,63,
66,12,69,255,63,200,32,228,23,254,95,207,192,16,245,255,0,132,119,240,127,
20,3,195,134,255,11,72,243,61,30,112,191,149,97,235,59,230,212,251,232,52,
76,126,254,62,158,31,255,77,231,207,71,167,97,242,9,95,67,94,94,43,191,
149,128,78,195,228,21,254,159,93,58,241,252,127,5,116,26,225,128,255,9,190,
255,239,99,210,112,7,252,151,230,251,61,31,147,166,22,88,248,127,3,82,248,
30,2,133,239,70,228,240,5,198,79,49,131,208,31,72,252,72,130,226,167,20,
37,126,24,66,254,253,43,100,216,5,137,223,166,255,219,25,139,254,253,11,66,
177,33,27,152,62,82,97,233,35,117,227,255,127,153,104,78,128,166,47,101,245,
203,224,244,21,136,225,70,185,69,136,244,57,23,51,125,2,129,84,201,150,71,
184,211,247,0,1,0,137,141,219,113
};
Image1 UiIcons_init_column_url(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_url, self.data, sizeof(column_url), Image1_num(&self));
	return self;
}

const UCHAR table_short[] = {
120,156,213,146,177,17,192,32,8,69,29,192,41,156,204,214,206,145,157,68,34,
185,51,129,31,208,38,69,194,89,249,190,32,240,67,248,70,148,178,198,189,75,
1,17,98,34,41,0,206,88,11,16,87,26,199,17,48,230,140,66,32,243,103,
198,231,205,16,228,39,79,173,206,155,218,146,145,63,222,47,162,243,67,236,8,
251,255,63,191,98,51,13,111,154,51,163,181,13,85,209,216,166,142,141,27,28,
55,201,142,208,141,200,209,205,70,137,53,126,49,14,5,192,134,9
};
Image1 UiIcons_init_table_short(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(table_short, self.data, sizeof(table_short), Image1_num(&self));
	return self;
}

const UCHAR column_menu[] = {
120,156,99,96,24,2,224,63,24,80,46,255,31,5,144,46,79,174,253,148,130,
81,255,83,234,127,24,198,229,63,66,242,3,235,127,26,2,0,233,246,187,69
};
Image1 UiIcons_init_column_menu(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_menu, self.data, sizeof(column_menu), Image1_num(&self));
	return self;
}

const UCHAR search[] = {
120,156,189,146,203,14,193,64,20,134,75,177,145,238,61,3,125,7,97,143,184,
164,225,9,92,131,190,4,226,53,208,247,113,47,37,177,103,213,84,210,217,248,
145,52,204,25,212,138,127,247,205,55,153,115,201,72,210,63,19,209,12,211,113,
76,67,139,188,213,69,11,94,172,252,171,149,135,192,180,29,143,70,19,157,25,
48,8,138,126,8,183,230,29,6,235,46,6,130,46,128,37,159,148,98,200,210,
214,118,168,242,92,135,21,230,89,195,140,84,148,231,40,241,108,160,77,235,117,
49,230,113,131,56,245,42,54,60,218,80,168,87,96,243,120,254,226,247,72,136,
239,155,190,253,233,24,241,88,193,156,206,183,160,243,133,14,116,63,77,108,201,
126,164,28,88,234,73,105,118,201,208,122,177,19,220,134,87,66,110,50,244,4,
189,198,17,88,232,170,162,168,250,18,151,126,64,212,235,88,246,240,248,31,226,
227,119,125,107,178,60,217,57,246,106,92,12,191,213,159,242,83,45,181,252,245,
237,130,191,254,105,174,1,30,134,158
};
Image1 UiIcons_init_search(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(search, self.data, sizeof(search), Image1_num(&self));
	return self;
}

const UCHAR column_percentage[] = {
120,156,221,144,187,17,131,48,16,5,143,132,136,161,18,10,177,76,7,84,98,
92,3,53,145,75,117,208,1,17,4,126,246,233,131,79,226,104,128,13,52,210,
220,72,44,75,116,11,122,183,186,62,29,38,44,109,49,6,99,194,161,219,49,
20,215,29,94,205,8,235,247,213,140,185,42,230,27,106,170,177,249,253,128,189,
43,63,15,164,133,218,5,211,73,79,204,207,114,217,251,138,156,247,27,155,55,
251,105,114,63,158,252,123,31,163,203,49,198,174,246,113,33,39,8,114,89,76,
73,144,203,98,74,162,156,140,153,17,229,100,76,73,146,19,177,20,185,203,249,
81,78,127,255,95,238,136,169,201,145,136,169,201,49,49,230,45,248,2,123,140,
134,143
};
Image1 UiIcons_init_column_percentage(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_percentage, self.data, sizeof(column_percentage), Image1_num(&self));
	return self;
}

const UCHAR timeline[] = {
120,156,197,208,209,9,128,48,12,4,208,66,157,202,44,216,232,164,165,67,68,
165,16,210,152,235,151,216,251,147,7,177,119,41,173,143,200,79,190,157,173,113,
198,206,114,135,3,215,236,100,62,2,167,216,237,253,130,255,159,143,90,103,239,
3,53,188,251,26,242,74,175,129,157,156,7,247,139,189,63,186,175,241,56,152,
94,29,76,111,222,55,76,31,236,79,19,135,211,171,131,233,195,126,95,251,202,
92,253,93,217,255
};
Image1 UiIcons_init_timeline(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(timeline, self.data, sizeof(timeline), Image1_num(&self));
	return self;
}

const UCHAR column_email[] = {
120,156,229,209,81,10,128,32,12,6,224,189,137,55,82,175,152,158,79,189,75,
99,169,195,84,178,8,122,41,218,155,251,230,63,80,128,223,23,157,214,93,95,
201,171,49,83,249,212,220,61,159,22,217,84,46,249,70,115,110,232,202,154,199,
59,47,61,180,37,66,90,228,217,193,83,4,82,72,109,29,8,121,215,232,44,
206,241,212,204,75,114,221,50,115,0,19,163,233,222,237,224,32,4,92,122,95,
239,241,103,255,255,233,218,0,81,241,208,253
};
Image1 UiIcons_init_column_email(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_email, self.data, sizeof(column_email), Image1_num(&self));
	return self;
}

const UCHAR locator[] = {
120,156,237,217,63,76,19,113,20,7,240,7,37,128,150,6,18,145,5,148,164,
32,116,97,16,66,112,102,131,0,166,134,4,73,55,157,216,76,138,131,38,12,
162,24,77,96,194,24,27,6,6,64,109,165,24,6,22,54,24,32,44,146,48,
201,130,20,7,72,229,143,69,18,189,90,251,147,106,192,182,239,119,119,239,253,
238,186,152,126,215,123,239,147,75,239,126,127,238,87,128,124,242,201,199,44,69,
109,254,137,229,173,195,120,252,112,107,105,194,223,86,100,43,94,226,157,59,22,
25,137,133,111,150,216,165,95,126,114,32,36,57,120,92,105,135,94,246,252,68,
166,167,114,242,180,204,50,239,221,209,211,83,137,244,88,211,75,3,70,122,42,
129,82,11,124,245,186,25,47,196,122,181,50,239,217,54,231,133,216,246,40,242,
215,162,20,94,136,104,189,18,95,243,153,198,11,177,83,163,192,95,32,252,246,
103,249,160,48,214,94,209,121,33,94,178,121,47,135,23,162,155,201,151,25,14,
43,156,200,69,158,255,140,199,11,49,194,226,43,117,231,28,189,124,187,196,241,
71,184,188,16,143,24,124,177,116,66,54,206,151,98,186,127,75,42,104,193,219,
141,78,103,99,127,80,147,94,102,76,165,115,178,254,119,238,179,203,117,179,210,
235,100,190,40,134,187,19,254,244,138,193,4,174,56,114,80,253,27,146,187,243,
103,150,12,74,74,90,169,190,31,247,134,178,107,194,184,230,30,213,159,64,173,
154,59,187,166,46,142,138,2,84,127,25,181,190,197,69,33,84,180,68,245,241,
178,213,143,139,124,168,232,19,213,199,163,171,1,23,53,160,162,125,170,143,199,
143,11,23,185,80,145,70,245,127,170,249,113,170,255,149,242,251,52,162,162,35,
170,191,137,90,73,207,247,35,213,95,68,173,65,92,132,223,207,69,170,63,134,
90,73,227,107,140,234,247,162,86,49,155,93,243,30,215,244,82,253,171,184,151,
50,191,93,161,250,176,139,155,19,131,233,5,247,37,243,243,46,153,135,73,201,
221,137,240,249,54,179,94,186,254,76,210,253,30,89,191,208,66,62,143,211,233,
241,133,228,235,35,99,139,85,114,44,21,12,19,227,236,65,223,240,253,215,12,
30,186,249,126,23,199,47,140,112,249,237,66,142,15,15,185,254,3,22,15,85,
242,119,68,55,90,21,207,135,41,158,63,197,228,161,41,201,225,147,77,92,95,
190,71,212,75,152,205,67,11,231,246,91,248,62,44,208,253,5,5,30,154,201,
79,224,87,179,138,15,211,84,127,90,137,135,218,31,52,254,123,173,154,15,163,
52,127,84,145,135,10,210,1,71,180,66,213,135,187,20,255,142,50,15,5,171,
230,252,106,129,186,15,205,146,117,60,51,137,235,22,120,128,23,102,254,184,37,
30,92,38,231,28,17,201,206,154,149,78,99,191,211,34,15,48,99,196,207,88,
230,161,114,79,159,223,179,227,132,184,75,119,158,75,178,246,12,186,209,61,195,
37,127,240,26,199,137,191,103,254,100,211,105,143,15,173,248,91,226,52,113,242,
121,131,105,134,100,254,144,109,60,56,86,48,191,66,62,142,33,196,141,54,212,
199,232,139,204,82,250,178,253,62,91,121,128,241,76,222,226,180,134,83,188,150,
206,175,49,14,11,137,169,221,255,199,239,171,174,232,70,233,56,159,39,146,29,
57,224,1,134,207,252,225,156,240,224,152,255,203,207,219,249,230,167,167,124,35,
197,111,148,231,136,63,253,176,142,42,255,155,67,75,187,166,181,231,144,7,24,
24,200,41,159,79,62,255,87,126,3,43,248,137,1
};
Image1 UiIcons_init_locator(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(96, 96));
	OsZlib_uncompress(locator, self.data, sizeof(locator), Image1_num(&self));
	return self;
}

const UCHAR column_currency[] = {
120,156,99,96,24,76,192,106,218,245,47,31,47,79,54,193,46,43,185,249,63,
20,172,144,192,34,173,247,228,255,167,54,83,110,62,211,142,143,255,159,104,96,
72,43,191,250,127,64,28,194,148,57,248,127,1,186,52,211,209,255,123,216,96,
28,174,28,102,116,249,212,255,79,5,241,184,156,233,246,255,72,60,210,12,142,
255,239,50,225,147,239,249,223,137,71,246,63,50,32,67,158,129,225,251,127,70,
124,214,19,144,167,220,126,252,254,3,133,207,61,140,32,71,6,192,240,141,198,
107,64,34,254,248,97,96,58,242,127,47,34,126,115,49,45,83,124,252,255,160,
36,132,41,119,8,51,125,48,48,232,60,249,255,185,221,140,151,223,172,251,211,
255,199,152,233,139,129,65,124,29,44,8,150,139,99,119,132,229,148,43,159,62,
92,156,100,132,207,161,244,5,0,18,46,134,98
};
Image1 UiIcons_init_column_currency(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_currency, self.data, sizeof(column_currency), Image1_num(&self));
	return self;
}

const UCHAR group[] = {
120,156,213,144,209,9,194,48,20,69,159,32,161,237,0,37,155,56,128,173,27,
56,132,144,25,90,221,205,206,80,49,138,186,134,4,174,73,26,9,73,26,240,
75,244,126,245,156,147,6,90,162,223,88,93,231,73,143,143,35,207,145,21,128,
87,33,57,225,85,72,147,48,111,56,21,146,19,28,224,147,10,201,76,152,39,
192,20,17,211,116,64,31,212,134,184,72,233,61,99,114,244,73,87,96,30,24,
84,220,175,88,123,216,224,28,247,30,247,214,221,192,218,7,186,184,87,3,160,
46,135,146,118,167,39,112,44,227,78,197,94,42,96,168,182,80,178,47,146,108,
47,110,110,232,22,171,229,108,180,107,32,243,145,102,63,44,92,250,99,254,171,
127,125,47,91,48,133,3
};
Image1 UiIcons_init_group(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(group, self.data, sizeof(group), Image1_num(&self));
	return self;
}

const UCHAR column_rating[] = {
120,156,173,210,61,143,1,81,20,6,224,43,65,67,225,51,161,16,253,100,42,
53,10,205,102,74,10,63,64,34,26,161,17,26,165,249,3,68,35,33,17,133,
70,45,35,42,21,106,68,98,108,65,68,231,35,153,24,133,240,238,96,125,204,
205,178,201,102,79,117,222,243,76,238,156,201,29,66,254,181,24,230,189,151,74,
111,217,38,203,182,119,158,5,178,111,88,191,4,150,250,215,30,69,183,139,232,
75,214,140,16,14,99,164,121,229,31,152,105,181,51,124,188,114,1,41,66,82,
16,126,32,11,203,69,248,147,100,34,196,36,157,248,8,199,90,110,98,202,213,
58,19,25,151,202,159,7,249,107,47,79,58,181,156,242,60,9,237,149,180,29,
181,171,124,220,113,118,71,156,175,182,71,91,101,184,15,93,78,240,174,209,55,
211,47,52,247,177,246,126,247,236,2,3,151,154,93,3,44,216,123,114,143,49,
87,93,28,51,199,216,253,148,173,61,172,188,143,232,93,161,103,85,157,103,104,
66,246,221,130,79,70,211,64,237,163,155,130,187,245,28,166,58,122,95,237,14,
246,91,111,199,78,75,187,7,226,35,136,240,208,30,67,253,188,119,171,117,254,
142,58,98,180,87,144,36,182,226,1,56,20,109,36,137,10,237,67,248,19,27,
28,10,133,3,54,9,63,134,20,27,143,248,4,4,229,112,70,128,210,30,141,
106,15,40,215,33,6,175,125,80,84,66,64,237,105,72,153,251,143,169,207,72,
72,171,189,81,118,62,71,103,185,161,118,55,33,191,12,254,88,95,33,130,170,
253
};
Image1 UiIcons_init_column_rating(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_rating, self.data, sizeof(column_rating), Image1_num(&self));
	return self;
}

const UCHAR export[] = {
120,156,99,96,24,12,224,63,22,64,154,60,166,137,3,43,223,128,79,94,119,
175,40,67,3,30,249,125,255,175,136,225,177,141,65,244,234,255,171,226,248,236,
23,191,246,255,154,4,166,188,28,114,248,93,23,37,89,158,144,249,196,186,143,
144,255,64,225,83,143,207,127,12,12,245,131,44,254,41,75,191,3,7,0,95,
215,184,27
};
Image1 UiIcons_init_export(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(export, self.data, sizeof(export), Image1_num(&self));
	return self;
}

const UCHAR name[] = {
120,156,99,96,24,138,128,103,246,243,187,165,140,184,229,215,254,7,130,82,156,
210,42,255,62,72,59,254,191,141,83,190,238,255,28,6,137,255,143,113,202,95,
255,239,202,144,243,127,29,46,105,131,255,207,153,25,142,253,15,197,37,223,245,
127,50,131,226,191,79,92,72,66,66,51,94,61,108,132,122,136,233,209,127,75,
134,138,255,139,145,164,5,174,129,60,148,12,225,216,254,127,192,200,112,233,191,
55,146,252,210,255,23,212,195,255,159,129,112,166,253,111,103,208,253,255,154,21,
33,173,247,239,167,2,3,223,255,15,96,14,235,235,255,6,12,109,255,103,34,
105,239,249,191,16,193,241,254,127,141,129,241,238,127,123,36,249,83,255,157,17,
156,69,255,235,24,44,255,63,101,66,146,127,247,95,24,206,230,250,244,95,133,
97,242,255,94,100,15,255,253,207,12,103,131,156,201,252,242,191,41,178,252,219,
255,162,112,246,134,255,69,12,174,104,113,115,14,104,63,227,180,143,213,32,246,
211,255,198,12,243,255,55,161,200,119,252,95,197,95,255,255,255,47,80,136,174,
250,159,154,252,253,191,22,138,188,226,87,96,232,253,121,249,127,249,245,18,134,
244,255,239,255,255,159,205,128,10,44,79,127,61,229,217,15,84,244,91,91,249,
255,255,239,9,12,216,128,220,205,251,187,255,223,103,184,127,203,0,171,52,8,
112,175,251,171,16,194,139,83,122,16,2,0,42,161,146,194
};
Image1 UiIcons_init_name(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(name, self.data, sizeof(name), Image1_num(&self));
	return self;
}

const UCHAR move[] = {
120,156,173,147,219,13,192,32,8,69,93,130,29,53,56,174,251,80,148,214,96,
43,144,54,189,127,122,46,134,151,41,253,42,0,31,183,230,25,160,17,57,134,
142,29,3,227,30,111,26,42,19,34,118,85,227,129,2,137,40,65,113,50,100,
238,202,224,144,239,60,235,36,57,39,92,3,80,87,1,207,154,244,213,6,235,
75,233,218,208,149,195,41,49,68,60,122,63,204,111,156,234,90,127,93,35,102,
207,103,127,202,126,136,31,251,47,202,50,223,108,96,188,246,3,247,60,218,175,
104,63,195,253,14,255,71,248,191,222,235,0,180,13,144,155
};
Image1 UiIcons_init_move(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(move, self.data, sizeof(move), Image1_num(&self));
	return self;
}

const UCHAR column_file[] = {
120,156,99,96,160,7,248,143,12,174,75,224,151,199,162,224,255,127,20,181,24,
10,80,229,175,99,40,64,149,151,192,80,128,42,207,128,161,0,205,126,176,35,
9,200,255,199,37,143,77,100,84,126,184,203,99,2,82,228,105,7,0,33,150,
178,125
};
Image1 UiIcons_init_column_file(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_file, self.data, sizeof(column_file), Image1_num(&self));
	return self;
}

const UCHAR table_hide[] = {
120,156,205,146,61,75,66,97,20,199,143,139,162,23,19,66,227,190,8,13,10,
65,17,90,75,38,84,224,183,104,11,26,107,45,220,90,146,66,90,180,181,143,
32,73,228,16,18,45,209,22,130,101,249,202,93,244,74,104,47,16,165,152,217,
191,231,94,77,36,68,3,151,206,240,192,195,239,55,156,243,63,135,104,228,218,
224,7,99,164,7,10,124,250,127,8,210,114,240,44,95,171,231,143,3,139,186,
126,66,11,221,42,248,185,62,2,26,33,175,145,243,132,26,204,40,175,245,194,
241,136,143,164,44,114,130,246,115,43,248,2,78,172,93,60,35,163,100,38,33,
135,172,212,22,26,205,237,71,200,83,29,60,95,69,210,17,88,33,41,3,165,
164,236,235,137,14,17,20,175,241,228,210,176,163,130,24,71,169,55,158,132,188,
218,220,30,145,7,41,226,46,80,113,50,108,76,34,110,32,122,133,133,200,158,
99,92,33,50,163,70,100,73,224,214,200,248,13,206,77,68,53,176,71,19,138,
68,86,149,155,174,144,100,156,156,21,196,77,116,7,15,181,133,146,157,150,112,
79,134,24,138,118,173,129,185,103,36,38,131,8,107,31,137,77,33,30,225,96,
226,18,149,217,206,0,211,50,94,118,154,117,119,91,96,57,124,180,182,30,80,
112,118,3,176,157,170,141,151,92,63,130,154,79,212,214,155,224,122,153,9,141,
240,130,222,34,106,66,117,245,87,254,156,95,110,239,230,221,71,98,182,223,186,
117,222,221,104,190,254,89,136,140,145,152,25,114,15,67,5,97,116,97,216,77,
50,97,115,16,39,126,48,254,91,125,3,103,2,223,81
};
Image1 UiIcons_init_table_hide(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(table_hide, self.data, sizeof(table_hide), Image1_num(&self));
	return self;
}

const UCHAR column_tags[] = {
120,218,205,211,61,14,194,32,20,7,112,54,47,160,164,156,193,251,104,93,213,
24,19,27,227,170,70,93,61,138,231,176,233,110,236,208,195,84,222,147,106,161,
124,188,50,57,200,212,240,131,127,120,229,193,216,31,141,209,19,205,32,152,151,
24,115,181,187,74,218,111,194,109,110,220,203,232,184,200,9,183,118,231,247,111,
190,237,78,56,11,220,103,207,3,118,93,213,93,114,247,79,216,78,176,154,49,
78,51,239,119,61,161,243,155,211,137,176,212,212,156,207,89,160,121,82,227,149,
133,11,52,79,107,188,184,153,194,9,175,241,236,223,142,232,120,246,194,83,120,
187,66,243,92,226,145,104,158,178,45,108,33,241,64,119,215,135,151,18,247,116,
119,86,201,48,101,107,128,29,221,190,156,15,30,112,3,216,246,119,120,6,8,
155,216,19,88,201,44,254,70,198,191,125,114,111,99,237,184,148
};
Image1 UiIcons_init_column_tags(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_tags, self.data, sizeof(column_tags), Image1_num(&self));
	return self;
}

const UCHAR error[] = {
120,156,99,96,24,2,224,63,86,64,138,60,54,51,169,45,159,38,4,225,73,
132,97,149,207,254,127,22,172,64,226,250,223,32,108,242,18,215,193,10,160,20,
22,243,193,50,48,105,108,238,3,201,193,164,177,186,31,168,0,38,77,142,60,
1,243,9,184,143,144,255,26,225,225,243,63,29,155,60,83,53,44,124,115,112,
185,31,25,80,87,158,178,244,55,136,1,0,56,171,211,117
};
Image1 UiIcons_init_error(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(error, self.data, sizeof(error), Image1_num(&self));
	return self;
}

const UCHAR column_text[] = {
120,156,99,96,24,22,224,63,6,32,77,30,161,142,144,61,163,242,163,242,195,
8,0,0,126,89,71,185
};
Image1 UiIcons_init_column_text(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_text, self.data, sizeof(column_text), Image1_num(&self));
	return self;
}

const UCHAR trash[] = {
120,156,99,96,24,68,32,224,217,127,32,120,230,143,75,254,249,127,48,120,138,
75,254,255,127,4,137,46,131,9,72,145,199,48,148,22,124,116,60,42,79,93,
121,74,248,207,254,91,35,115,109,208,19,97,59,122,234,105,65,149,103,107,123,
138,44,251,180,149,141,97,80,0,0,212,45,223,144
};
Image1 UiIcons_init_trash(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(trash, self.data, sizeof(trash), Image1_num(&self));
	return self;
}

const UCHAR column_slider[] = {
120,156,99,96,24,58,128,165,251,245,235,78,102,220,242,157,255,129,160,19,83,
252,63,28,88,89,255,71,2,152,242,214,88,229,81,204,239,192,109,63,115,215,
203,151,248,220,71,37,64,114,48,252,71,7,208,96,192,41,111,141,42,143,205,
124,122,7,3,185,113,15,2,216,226,30,211,255,214,56,229,225,230,15,124,220,
83,29,0,0,190,128,182,35
};
Image1 UiIcons_init_column_slider(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_slider, self.data, sizeof(column_slider), Image1_num(&self));
	return self;
}

const UCHAR column_number[] = {
120,156,99,96,24,50,224,255,127,84,122,232,200,255,199,10,136,151,31,104,247,
83,42,63,210,253,63,136,1,0,38,97,159,97
};
Image1 UiIcons_init_column_number(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_number, self.data, sizeof(column_number), Image1_num(&self));
	return self;
}

const UCHAR graph[] = {
120,156,99,96,24,172,128,181,15,175,180,228,161,255,248,164,109,159,253,199,38,
207,12,165,243,127,253,199,38,111,117,243,195,177,217,5,174,74,203,254,255,235,
198,148,231,236,251,251,31,10,62,6,51,32,228,101,33,148,245,173,255,127,186,
21,221,10,103,31,251,112,85,131,1,73,254,255,243,45,77,254,42,253,127,255,
95,183,132,138,176,48,160,200,67,192,223,30,78,100,219,144,229,3,155,183,62,
191,105,137,44,203,160,140,44,15,34,153,96,6,131,129,231,59,116,121,16,176,
188,121,191,203,140,145,129,129,177,246,239,127,76,121,206,30,176,255,30,244,216,
109,252,255,183,22,89,190,70,10,164,249,250,255,191,189,102,29,247,64,106,222,
251,160,186,255,215,90,143,238,63,255,111,90,129,184,38,157,247,175,168,162,186,
127,211,31,144,255,122,97,254,99,100,71,243,31,131,116,237,67,136,102,236,254,
7,121,143,157,1,175,60,6,160,167,60,118,64,172,252,64,2,0,99,219,210,
195
};
Image1 UiIcons_init_graph(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(graph, self.data, sizeof(graph), Image1_num(&self));
	return self;
}

const UCHAR column_phone[] = {
120,156,189,209,79,40,131,97,28,7,240,223,187,151,173,97,66,118,82,178,252,
153,63,141,155,28,148,82,82,59,237,176,92,184,236,162,150,163,28,38,7,55,
78,138,163,37,37,86,228,64,166,208,74,227,192,193,101,91,57,104,33,222,44,
83,90,200,90,175,237,235,121,247,74,189,219,243,220,228,119,121,158,95,159,111,
61,207,243,123,136,254,163,170,55,223,46,251,196,92,117,10,32,237,18,177,229,
24,74,111,24,207,157,124,150,195,72,57,201,114,4,165,141,235,243,72,119,107,
135,68,240,208,196,243,23,244,235,183,136,98,143,231,89,216,244,205,32,30,121,
30,129,191,184,186,210,88,230,249,24,98,146,206,251,102,158,155,21,120,137,76,
79,56,224,50,209,36,174,101,162,13,172,243,153,42,147,152,34,234,202,171,61,
130,128,7,239,14,162,21,92,9,14,160,16,34,18,217,146,216,146,249,222,144,
66,128,189,32,131,93,171,214,250,47,118,154,141,1,119,190,48,78,52,244,138,
4,251,230,5,246,155,119,45,198,192,28,114,195,68,173,49,168,193,37,168,190,
243,210,128,180,138,204,0,145,117,81,5,84,47,213,148,5,228,109,124,184,217,
234,12,229,216,180,120,129,32,190,2,38,182,169,45,182,44,16,53,94,65,154,
205,227,172,227,183,117,168,185,210,103,142,42,248,156,249,153,145,61,142,195,178,
57,212,173,21,112,239,171,208,57,110,47,115,162,145,4,112,59,221,216,46,96,
246,207,19,55,208,74,192,218,67,60,39,217,76,176,94,196,127,91,223,181,141,
155,227
};
Image1 UiIcons_init_column_phone(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_phone, self.data, sizeof(column_phone), Image1_num(&self));
	return self;
}

const UCHAR table[] = {
120,156,99,96,24,2,224,63,86,64,138,60,18,133,194,25,44,242,67,221,127,
67,221,253,180,245,223,32,6,0,117,18,30,240
};
Image1 UiIcons_init_table(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(table, self.data, sizeof(table), Image1_num(&self));
	return self;
}

const UCHAR unknown[] = {
120,156,99,96,24,60,192,101,222,173,175,95,111,205,117,198,46,171,112,248,63,
20,28,144,199,34,173,243,234,255,179,74,109,46,46,221,234,23,255,95,105,96,
72,115,222,249,191,133,31,194,20,218,249,255,38,7,186,124,241,255,243,108,12,
126,7,223,189,59,232,199,192,117,249,127,62,186,252,169,255,190,12,153,255,64,
182,255,203,100,8,250,127,2,93,254,227,127,62,134,151,255,243,5,5,243,255,
191,100,224,255,255,1,93,254,255,127,8,102,144,254,255,17,40,255,14,83,30,
4,24,24,152,87,254,95,197,96,247,255,20,14,121,142,245,255,191,168,50,110,
249,95,131,37,4,128,128,239,192,255,207,142,12,45,255,95,139,96,149,102,218,
242,255,149,17,203,236,255,191,61,177,107,143,252,255,205,144,109,235,255,111,254,
216,165,25,14,252,159,192,208,240,255,185,25,14,105,134,55,96,71,26,226,146,
134,123,146,86,128,144,249,132,229,161,145,68,182,60,101,246,15,0,0,0,60,
243,150,245
};
Image1 UiIcons_init_unknown(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(unknown, self.data, sizeof(unknown), Image1_num(&self));
	return self;
}

const UCHAR reoder[] = {
120,156,99,96,24,82,160,190,30,191,244,255,255,248,20,0,165,241,41,0,75,
227,55,129,28,240,31,39,32,78,126,212,126,42,129,6,136,169,13,248,21,224,
150,6,43,192,39,13,84,128,95,122,240,1,0,246,140,187,69
};
Image1 UiIcons_init_reoder(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(reoder, self.data, sizeof(reoder), Image1_num(&self));
	return self;
}

const UCHAR chart_columns[] = {
120,156,99,96,160,22,248,143,4,200,147,199,100,141,202,15,140,252,201,183,95,
174,244,107,97,151,103,233,128,70,226,239,201,172,88,228,153,119,254,255,62,209,
140,155,219,108,226,207,255,187,216,48,229,187,255,63,214,133,8,232,63,249,63,
9,67,94,229,239,119,93,24,71,247,199,31,45,116,249,222,255,19,16,156,137,
255,251,208,229,207,252,55,67,112,44,254,95,70,151,127,247,159,27,158,18,25,
120,255,127,34,85,254,212,127,115,188,230,119,33,187,111,210,255,94,116,121,133,
191,63,224,254,51,248,249,27,197,127,80,240,68,31,34,96,248,4,98,22,186,
252,255,159,19,45,184,121,45,208,195,23,6,216,39,254,133,198,207,4,86,44,
210,64,160,217,119,241,203,167,203,125,96,187,1,251,215,226,199
};
Image1 UiIcons_init_chart_columns(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(chart_columns, self.data, sizeof(chart_columns), Image1_num(&self));
	return self;
}

const UCHAR card[] = {
120,218,99,96,24,2,224,255,127,236,152,88,121,106,216,143,79,140,144,60,146,
32,24,224,177,8,171,60,146,136,232,37,168,60,118,251,197,46,255,191,140,41,
143,172,251,186,4,110,251,193,210,12,216,236,135,129,203,98,48,147,81,237,135,
1,49,188,225,131,203,102,114,228,9,153,79,93,251,255,195,99,6,123,250,195,
47,63,136,1,0,17,138,158,183
};
Image1 UiIcons_init_card(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(card, self.data, sizeof(card), Image1_num(&self));
	return self;
}

const UCHAR cards[] = {
120,156,99,96,24,226,224,63,94,64,140,60,62,179,209,229,49,121,88,229,145,
204,198,106,62,78,121,184,126,6,2,242,148,153,79,182,255,224,134,227,49,159,
144,252,64,155,143,221,52,114,211,207,16,7,0,116,185,3,12
};
Image1 UiIcons_init_cards(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(cards, self.data, sizeof(cards), Image1_num(&self));
	return self;
}

const UCHAR project[] = {
120,156,99,96,160,6,112,21,69,23,17,117,69,150,254,121,9,164,192,98,218,
249,247,175,46,79,115,0,73,95,250,137,164,64,244,210,255,229,12,50,91,254,
67,193,94,101,134,229,255,47,33,27,41,186,66,84,231,233,255,247,29,214,34,
34,198,181,175,255,191,177,6,10,160,218,39,245,248,255,30,113,8,147,111,205,
255,87,42,232,238,89,253,127,47,27,140,205,184,246,255,30,52,105,189,255,239,
37,16,60,190,87,255,29,80,229,123,255,119,33,115,235,254,207,64,149,63,249,
223,10,153,107,240,255,26,170,252,235,255,210,200,92,222,255,159,224,108,160,135,
25,24,62,252,231,71,150,231,255,255,17,42,1,165,46,252,183,68,150,55,254,
127,25,46,15,6,253,255,27,144,229,155,254,79,71,181,223,225,255,91,97,4,
79,224,245,127,123,84,121,134,157,255,215,51,195,216,140,203,254,239,66,147,102,
208,248,240,127,46,35,148,93,243,255,131,6,186,60,131,197,215,255,245,16,150,
223,191,63,222,24,210,12,12,46,191,127,169,129,104,182,199,255,83,209,229,192,
209,57,1,18,198,17,32,203,81,227,23,156,62,24,244,255,159,1,113,230,252,
15,98,64,75,31,208,244,5,75,63,42,232,233,11,154,62,97,242,114,12,104,
233,19,10,96,225,141,197,241,68,202,67,0,185,242,192,48,186,125,219,25,183,
44,45,0,0,109,97,171,247
};
Image1 UiIcons_init_project(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(project, self.data, sizeof(project), Image1_num(&self));
	return self;
}

const UCHAR import[] = {
120,156,99,96,24,12,224,63,22,64,154,60,166,137,131,83,94,97,191,2,62,
121,197,7,255,151,226,145,87,122,248,255,48,15,186,85,8,121,229,71,216,165,
161,242,74,143,113,133,32,113,242,132,204,39,232,62,130,254,35,24,62,56,68,
6,94,158,178,244,59,112,0,0,45,168,195,235
};
Image1 UiIcons_init_import(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(import, self.data, sizeof(import), Image1_num(&self));
	return self;
}

const UCHAR table_column_height[] = {
120,156,99,96,24,5,255,255,51,28,62,202,128,142,129,162,72,242,71,24,208,
49,138,60,118,83,169,41,207,181,0,33,181,128,11,67,94,235,42,146,33,255,
175,106,161,201,199,127,253,143,2,190,198,147,38,79,200,124,130,238,163,216,255,
248,229,41,138,191,145,12,0,173,210,138,43
};
Image1 UiIcons_init_table_column_height(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(table_column_height, self.data, sizeof(table_column_height), Image1_num(&self));
	return self;
}

const UCHAR column_date[] = {
120,156,99,96,24,36,224,255,127,236,108,8,31,27,32,69,30,211,124,124,246,
97,186,135,114,251,73,241,47,46,121,152,187,113,185,159,144,60,37,246,99,195,
164,200,83,211,126,114,228,41,179,159,178,248,31,196,0,0,152,149,243,13
};
Image1 UiIcons_init_column_date(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_date, self.data, sizeof(column_date), Image1_num(&self));
	return self;
}

const UCHAR column_location[] = {
120,156,189,210,187,75,66,97,24,199,241,199,11,56,72,120,161,196,77,112,201,
22,197,193,65,16,177,41,210,150,34,200,191,64,14,212,102,34,53,68,161,213,
226,82,139,145,54,137,179,25,56,74,147,212,100,129,131,99,166,34,228,112,202,
11,46,199,227,47,47,188,136,157,211,88,207,242,126,225,115,224,125,120,57,68,
255,55,43,177,114,191,95,142,45,255,194,187,93,76,231,107,71,158,71,200,249,
180,90,95,14,163,109,25,54,117,113,56,171,40,58,50,87,196,112,207,242,1,
103,82,127,133,143,40,208,108,250,137,214,241,34,245,46,180,68,13,160,78,180,
132,174,212,219,48,51,55,163,45,245,71,236,17,249,27,245,13,162,32,138,82,
63,64,129,101,1,251,82,55,14,68,251,172,236,226,192,40,117,74,32,63,139,
60,18,50,76,166,30,220,147,211,141,158,73,206,41,62,91,171,136,184,44,147,
129,71,112,178,60,111,144,119,226,208,210,235,91,224,228,76,237,10,235,148,207,
72,38,241,164,212,133,93,170,69,181,94,119,128,52,57,4,81,20,28,148,6,
62,175,172,115,85,156,15,129,106,154,83,211,37,112,65,106,238,174,10,12,227,
10,230,199,16,83,206,105,105,42,21,205,52,156,41,17,71,204,219,216,100,233,
116,178,218,194,7,203,247,185,207,39,128,26,203,40,132,27,219,162,174,221,8,
236,119,27,239,119,58,222,239,45,19,242,88,12,42,149,193,226,9,101,106,128,
112,162,152,127,110,75,241,88,24,254,118,245,199,251,120,35,217,82,147,23,69,
190,89,202,70,188,106,233,66,127,51,223,218,189,184,112
};
Image1 UiIcons_init_column_location(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_location, self.data, sizeof(column_location), Image1_num(&self));
	return self;
}

const UCHAR column_datetime[] = {
120,156,205,208,207,10,130,48,28,7,240,129,228,69,188,119,47,58,24,98,93,
204,135,234,53,58,152,244,103,213,171,116,233,13,4,111,9,62,64,94,235,16,
130,74,201,183,116,13,165,237,144,4,209,23,134,63,247,217,126,155,18,242,139,
24,171,48,185,4,139,158,92,213,109,129,42,133,171,200,248,128,148,218,154,102,
211,28,123,201,130,29,78,38,171,172,24,179,242,9,52,120,120,79,77,62,103,
102,104,132,249,10,235,122,15,21,61,132,93,187,3,159,215,220,175,208,106,215,
113,230,231,114,191,84,222,229,46,244,15,48,121,114,132,136,245,23,220,43,239,
55,69,212,45,95,54,152,191,247,239,23,217,243,251,166,21,143,242,219,224,221,
137,139,216,98,213,56,134,71,4,87,246,200,169,163,233,78,249,127,59,162,19,
101,246,186,80,177,84,217,60,31,245,90,255,156,28,169,193,247,137,78,132,180,
117,217,104,227,223,157,47,203,231,254,191,121,0,14,61,0,24
};
Image1 UiIcons_init_column_datetime(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_datetime, self.data, sizeof(column_datetime), Image1_num(&self));
	return self;
}

const UCHAR duplicate[] = {
120,156,205,142,187,13,194,48,16,134,93,100,9,43,73,19,137,97,16,173,7,
200,16,65,244,48,13,2,26,30,13,18,147,100,5,64,113,104,64,41,126,124,
137,243,112,114,66,136,2,248,10,219,223,157,239,33,196,63,16,174,243,124,51,
226,205,16,92,96,56,251,156,17,43,108,125,127,143,37,103,196,13,129,41,131,
230,140,208,20,9,235,136,107,85,199,93,16,30,218,254,93,35,34,77,27,233,
136,51,98,129,146,57,103,134,9,238,137,148,211,7,198,67,35,78,72,232,154,
225,56,52,34,131,164,75,226,42,148,99,22,160,25,85,168,198,218,168,125,149,
91,21,234,227,252,139,254,177,39,132,23,155,136,114,204,146,2,105,125,246,141,
168,254,86,117,125,107,103,185,251,116,118,250,74,158,224,237,157,252,239,120,2,
98,97,239,3
};
Image1 UiIcons_init_duplicate(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(duplicate, self.data, sizeof(duplicate), Image1_num(&self));
	return self;
}

const UCHAR table_import_export[] = {
120,156,99,96,24,120,240,31,11,32,77,30,211,68,242,229,21,246,43,224,147,
87,124,240,127,41,30,211,148,30,254,63,204,131,91,94,249,17,166,52,146,188,
210,99,108,190,36,94,30,97,62,200,23,248,220,183,244,255,3,69,124,254,227,
57,252,255,161,18,54,121,152,201,64,5,143,180,49,228,81,157,247,140,128,252,
99,108,230,67,1,200,124,69,220,242,184,221,7,6,252,203,112,249,15,42,34,
184,91,129,1,159,60,110,30,54,121,202,210,239,64,2,0,176,248,228,59
};
Image1 UiIcons_init_table_import_export(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(table_import_export, self.data, sizeof(table_import_export), Image1_num(&self));
	return self;
}

const UCHAR table_filter[] = {
120,156,205,144,59,18,131,32,20,69,31,53,46,131,210,133,232,46,220,134,159,
189,100,82,227,110,112,198,93,168,141,157,51,55,16,37,225,163,76,186,120,27,
120,28,224,29,32,186,65,112,154,223,249,128,158,249,55,178,30,195,183,18,11,
90,159,183,88,132,83,150,219,86,82,162,166,14,179,179,95,204,232,162,126,138,
219,130,171,200,135,50,5,121,172,49,9,149,81,24,237,88,239,179,218,119,115,
156,10,51,22,161,155,77,131,73,159,19,19,154,83,108,250,190,35,67,183,143,
227,206,99,55,27,243,231,238,191,223,144,231,105,94,173,24,83,28,120,94,63,
95,243,181,186,166,154,143,121,10,211,131,39,241,63,242,2,95,39,142,210
};
Image1 UiIcons_init_table_filter(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(table_filter, self.data, sizeof(table_filter), Image1_num(&self));
	return self;
}

const UCHAR table_row_height[] = {
120,156,99,96,24,28,224,63,26,32,85,158,16,56,122,4,76,197,199,35,243,
144,192,225,195,32,82,235,235,87,45,4,15,3,112,93,253,255,255,42,23,110,
75,22,128,92,182,0,159,253,80,135,227,178,31,38,143,195,126,184,60,78,128,
83,126,88,216,143,39,124,193,0,79,252,64,108,132,197,47,78,251,161,233,3,
167,255,113,2,90,167,95,90,1,0,175,38,138,43
};
Image1 UiIcons_init_table_row_height(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(table_row_height, self.data, sizeof(table_row_height), Image1_num(&self));
	return self;
}

const UCHAR kanban[] = {
120,156,99,96,24,132,224,63,20,144,47,143,32,105,47,143,233,26,82,229,209,
109,27,32,121,184,67,201,150,71,103,140,16,121,120,176,160,51,136,146,31,80,
0,0,11,103,7,8
};
Image1 UiIcons_init_kanban(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(kanban, self.data, sizeof(kanban), Image1_num(&self));
	return self;
}

const UCHAR column_check[] = {
120,156,197,208,203,17,192,32,8,5,64,171,112,40,204,46,40,216,98,56,16,
19,73,240,131,36,167,248,78,142,203,0,26,194,254,176,25,74,174,43,23,127,
235,111,221,2,186,14,153,209,241,194,25,214,222,178,225,29,207,94,57,173,92,
152,6,71,232,154,19,247,142,50,242,158,205,131,203,253,179,218,232,85,116,243,
201,175,2,125,216,236,103,129,245,107,122,130,108,253,90,243,254,24,131,235,77,
254,116,59,95,125,103,14,71,218,207,74
};
Image1 UiIcons_init_column_check(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(column_check, self.data, sizeof(column_check), Image1_num(&self));
	return self;
}

const UCHAR star_black[] = {
120,218,99,96,160,42,208,214,198,47,63,103,54,94,105,177,239,63,36,240,201,
55,252,255,223,128,71,154,253,197,255,255,175,56,113,203,167,253,7,130,84,156,
210,140,87,65,242,55,152,112,201,123,253,7,3,79,92,242,187,33,242,187,176,
72,9,233,120,38,181,253,131,200,255,107,75,242,212,17,130,201,240,181,47,57,
120,235,219,127,12,240,237,214,193,37,237,124,64,5,126,88,36,33,224,71,40,
216,4,139,215,216,165,223,219,66,173,208,122,132,77,250,153,62,220,117,82,23,
49,165,175,201,33,57,95,240,48,186,244,9,17,212,144,95,141,42,189,137,11,
45,0,88,110,34,75,223,100,65,15,32,230,47,200,242,95,49,228,13,80,205,
215,199,26,181,8,128,17,201,115,80,229,49,146,33,36,4,126,79,158,252,27,
204,184,136,38,205,13,22,222,171,203,192,160,190,21,196,250,195,131,42,239,0,
20,187,13,137,14,6,23,80,50,178,71,149,47,251,255,165,129,3,198,97,205,
255,240,191,20,85,126,213,34,148,116,47,60,113,57,170,188,60,186,123,229,169,
148,97,1,10,211,56,170
};
Image1 UiIcons_init_star_black(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(star_black, self.data, sizeof(star_black), Image1_num(&self));
	return self;
}

const UCHAR star_white[] = {
120,218,173,211,63,72,2,81,28,7,240,87,26,34,130,92,42,90,65,57,22,
105,217,212,114,220,174,45,186,214,40,214,162,224,32,229,90,32,130,99,234,102,
139,145,68,155,75,75,71,139,139,129,67,9,29,72,58,36,36,132,112,129,154,
58,28,248,237,212,252,115,87,222,228,27,238,126,223,247,121,188,247,184,247,142,
144,185,54,155,77,217,175,82,138,108,238,118,205,74,126,1,156,43,176,230,19,
168,107,103,187,15,133,2,124,51,121,129,195,225,17,74,139,179,252,0,31,75,
234,42,92,179,156,197,41,33,103,120,248,135,140,118,151,55,218,107,81,132,80,
173,94,212,235,178,27,71,162,143,101,114,229,46,6,45,222,239,136,15,235,110,
57,151,137,233,197,236,238,136,169,193,177,233,136,223,210,119,139,63,146,102,185,
134,216,217,113,15,102,160,121,228,41,249,130,84,30,60,253,91,111,87,241,186,
46,229,213,103,212,28,227,180,246,130,218,206,52,111,189,131,219,152,202,203,57,
124,209,147,184,95,199,147,73,50,159,54,139,246,120,0,221,70,86,126,10,170,
18,156,163,218,137,146,74,190,95,213,119,111,252,73,12,189,182,90,238,123,120,
155,132,50,28,114,63,193,141,248,220,188,127,220,21,95,25,28,203,61,133,32,
49,36,4,64,72,24,72,16,127,174,97,17,76,128,135,144,76,10,224,3,12,
138,50,214,9,168,0,172,157,16,59,11,177,20,116,82,103,196,227,168,120,134,
181,71,28,9,70,234,33,52,195,154,241,53,13,55,17,146,250,221,245,202,116,
52,93,222,74,221,42,223,175,117,78,63,236,15,26,121,170,157
};
Image1 UiIcons_init_star_white(void)
{
	Image1 self = Image1_initSize(Vec2i_init2(32, 32));
	OsZlib_uncompress(star_white, self.data, sizeof(star_white), Image1_num(&self));
	return self;
}